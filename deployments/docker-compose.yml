version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "2181" ]
      interval: 10s
      timeout: 5s
      retries: 5

  broker:
    image: confluentinc/cp-kafka:7.4.0
    container_name: broker
    hostname: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6380:6379"

  storage:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
      args:
        SERVICE_NAME: storage
        SERVICE_PORT: 3031
    ports:
      - "3031:3031"
    environment:
      - KAFKA_BROKER_SERV=broker:9092
    depends_on:
      broker:
        condition: service_healthy
    init: true

  collector:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
      args:
        SERVICE_NAME: collector
        SERVICE_PORT: 8080
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKER_SERV=broker:9092
    depends_on:
      broker:
        condition: service_healthy
    init: true